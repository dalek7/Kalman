#ifndef __SNOW_KALMAN__
#define __SNOW_KALMAN__

#include "MatLib.h"

static float data_t[] = { 0,0.033426,0.066893,0.10036,0.13387,0.16729,0.20072,0.23414,0.26757,0.30113,0.33455,0.36799,0.40142,0.43484,0.46825,0.50168,0.5351,0.56853,0.602,0.63545,0.66887,0.70233,0.73575
};

static float data_px[] = { 0.52801,0.55901,0.59869,0.6268,0.65788,0.69128,0.71235,0.74407,0.81412,0.8336,0.85724,0.87474,0.90252,0.94156,0.96077,0.98929,1.0185,1.0296,1.0869,1.0586,1.0788,1.1064,1.1486
};

static float data_py[] = { -0.10764,-0.11525,-0.12134,-0.12416,-0.13478,-0.13629,-0.13921,-0.14293,-0.15084,-0.15287,-0.15805,-0.15892,-0.1614,-0.1676,-0.16888,-0.17015,-0.17548,-0.17647,-0.18173,-0.1757,-0.17761,-0.18182,-0.18522
};

typedef struct __status
{
	float v[4];

} status;

status KalmanFilter(float t, float x, float y)
{
	// TODO : implement this function.. 
	status vout;
	vout.v[0] = x + 1; //for testing
	vout.v[1] = x + 2;
	vout.v[2] = 0;
	vout.v[3] = 0;


	return vout;
}

#endif